(()=>{"use strict";var n={426:(n,e,t)=>{t.d(e,{Z:()=>c});var r=t(537),o=t.n(r),a=t(645),i=t.n(a)()(o());i.push([n.id,":root{\n  font-family: 'Open Sans', sans-serif;\n  --bg-color: #2dd4bf;\n  --header-color: #064e3b;\n  --header-text: #a7f3d0;\n  --card-bg-color: #f0fdfa;\n  --selection-color: #0284c7;\n  --button-down-color: #0c4a6e;\n}\nhtml, \nbody{\n  padding: 0px;\n  margin: 0px;\n  height: 100%;\n  width: 100%;\n}\n\nheader{\n  display: flex;\n  height: 80px;\n  background-color: var(--header-color);\n  color: var(--header-text);\n  align-items: center;\n  justify-content: space-between;\n}\n\n.format{\n  display: flex;\n  align-items: center;\n  gap: 8px;\n  padding: 16px;\n}\n\n.format .select{\n  font-size: 1.5rem;\n  height: 1.8rem;\n  width: 1.8rem;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  text-align: center;\n}\n\n.format .select:hover{\n  text-decoration: underline;\n}\n\n.format .select.selected{\n  background-color: var(--selection-color);\n  border: 2px solid var(--selection-color);\n  border-radius: 100%;\n}\n\nheader form{\n  padding: 16px;\n  display: flex;\n  gap: 8px;\n}\n\nheader form input{\n  padding: 4px 8px;\n  border-radius: 16px;\n  border-style: none;\n}\n\nheader form button{\n  border-style: none;\n  border-radius: 16px;\n  background-color: var(--selection-color);\n  color: var(--header-text);\n  padding: 8px;\n}\n\nheader form button:active{\n  background-color: var(--button-down-color);\n\n}\n\nmain{\n  height: calc(100% - 80px);\n  width: 100%;\n  background-color: var(--bg-color);\n  display: flex;\n  align-items: center;\n  justify-content: center;\n}\n\n.display{\n  background-color: var(--card-bg-color);\n  border-radius: 8px;\n  padding: 0;\n  display: grid;\n  gap: 8px;\n  grid-template-rows: repeat(4, max-content) 1fr;\n  grid-template-columns: repeat(3, max-content);\n  overflow: hidden;\n  box-shadow: 6px 6px 16px  4px black;\n  max-height: 60%;\n}\n\n.display .title{\n  grid-row: 1/1;\n  grid-column: 1/3;\n  font-size: 24px;\n  font-weight: bold;\n  padding: 16px;\n}\n\n.display .entry{\n  font-weight: bold;\n  padding: 0px 16px;\n}\n\n.display .data{\n  text-align: right;\n  padding: 0px 16px;\n}\n\n.display .imgContainer{\n  grid-row: 1/-1;\n  grid-column: 3/3;\n  height: max(200px, inherit); \n  display: flex;\n  align-items: center;\n  justify-content: center;\n  overflow: hidden;\n}\n\n.display .last{\n  padding: 0px 16px 16px 16px;\n}\n\n\n.imgContainer img{\n  object-fit: scale-down;\n}\n","",{version:3,sources:["webpack://./src/style.css"],names:[],mappings:"AAAA;EACE,oCAAoC;EACpC,mBAAmB;EACnB,uBAAuB;EACvB,sBAAsB;EACtB,wBAAwB;EACxB,0BAA0B;EAC1B,4BAA4B;AAC9B;AACA;;EAEE,YAAY;EACZ,WAAW;EACX,YAAY;EACZ,WAAW;AACb;;AAEA;EACE,aAAa;EACb,YAAY;EACZ,qCAAqC;EACrC,yBAAyB;EACzB,mBAAmB;EACnB,8BAA8B;AAChC;;AAEA;EACE,aAAa;EACb,mBAAmB;EACnB,QAAQ;EACR,aAAa;AACf;;AAEA;EACE,iBAAiB;EACjB,cAAc;EACd,aAAa;EACb,aAAa;EACb,mBAAmB;EACnB,uBAAuB;EACvB,kBAAkB;AACpB;;AAEA;EACE,0BAA0B;AAC5B;;AAEA;EACE,wCAAwC;EACxC,wCAAwC;EACxC,mBAAmB;AACrB;;AAEA;EACE,aAAa;EACb,aAAa;EACb,QAAQ;AACV;;AAEA;EACE,gBAAgB;EAChB,mBAAmB;EACnB,kBAAkB;AACpB;;AAEA;EACE,kBAAkB;EAClB,mBAAmB;EACnB,wCAAwC;EACxC,yBAAyB;EACzB,YAAY;AACd;;AAEA;EACE,0CAA0C;;AAE5C;;AAEA;EACE,yBAAyB;EACzB,WAAW;EACX,iCAAiC;EACjC,aAAa;EACb,mBAAmB;EACnB,uBAAuB;AACzB;;AAEA;EACE,sCAAsC;EACtC,kBAAkB;EAClB,UAAU;EACV,aAAa;EACb,QAAQ;EACR,8CAA8C;EAC9C,6CAA6C;EAC7C,gBAAgB;EAChB,mCAAmC;EACnC,eAAe;AACjB;;AAEA;EACE,aAAa;EACb,gBAAgB;EAChB,eAAe;EACf,iBAAiB;EACjB,aAAa;AACf;;AAEA;EACE,iBAAiB;EACjB,iBAAiB;AACnB;;AAEA;EACE,iBAAiB;EACjB,iBAAiB;AACnB;;AAEA;EACE,cAAc;EACd,gBAAgB;EAChB,2BAA2B;EAC3B,aAAa;EACb,mBAAmB;EACnB,uBAAuB;EACvB,gBAAgB;AAClB;;AAEA;EACE,2BAA2B;AAC7B;;;AAGA;EACE,sBAAsB;AACxB",sourcesContent:[":root{\n  font-family: 'Open Sans', sans-serif;\n  --bg-color: #2dd4bf;\n  --header-color: #064e3b;\n  --header-text: #a7f3d0;\n  --card-bg-color: #f0fdfa;\n  --selection-color: #0284c7;\n  --button-down-color: #0c4a6e;\n}\nhtml, \nbody{\n  padding: 0px;\n  margin: 0px;\n  height: 100%;\n  width: 100%;\n}\n\nheader{\n  display: flex;\n  height: 80px;\n  background-color: var(--header-color);\n  color: var(--header-text);\n  align-items: center;\n  justify-content: space-between;\n}\n\n.format{\n  display: flex;\n  align-items: center;\n  gap: 8px;\n  padding: 16px;\n}\n\n.format .select{\n  font-size: 1.5rem;\n  height: 1.8rem;\n  width: 1.8rem;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  text-align: center;\n}\n\n.format .select:hover{\n  text-decoration: underline;\n}\n\n.format .select.selected{\n  background-color: var(--selection-color);\n  border: 2px solid var(--selection-color);\n  border-radius: 100%;\n}\n\nheader form{\n  padding: 16px;\n  display: flex;\n  gap: 8px;\n}\n\nheader form input{\n  padding: 4px 8px;\n  border-radius: 16px;\n  border-style: none;\n}\n\nheader form button{\n  border-style: none;\n  border-radius: 16px;\n  background-color: var(--selection-color);\n  color: var(--header-text);\n  padding: 8px;\n}\n\nheader form button:active{\n  background-color: var(--button-down-color);\n\n}\n\nmain{\n  height: calc(100% - 80px);\n  width: 100%;\n  background-color: var(--bg-color);\n  display: flex;\n  align-items: center;\n  justify-content: center;\n}\n\n.display{\n  background-color: var(--card-bg-color);\n  border-radius: 8px;\n  padding: 0;\n  display: grid;\n  gap: 8px;\n  grid-template-rows: repeat(4, max-content) 1fr;\n  grid-template-columns: repeat(3, max-content);\n  overflow: hidden;\n  box-shadow: 6px 6px 16px  4px black;\n  max-height: 60%;\n}\n\n.display .title{\n  grid-row: 1/1;\n  grid-column: 1/3;\n  font-size: 24px;\n  font-weight: bold;\n  padding: 16px;\n}\n\n.display .entry{\n  font-weight: bold;\n  padding: 0px 16px;\n}\n\n.display .data{\n  text-align: right;\n  padding: 0px 16px;\n}\n\n.display .imgContainer{\n  grid-row: 1/-1;\n  grid-column: 3/3;\n  height: max(200px, inherit); \n  display: flex;\n  align-items: center;\n  justify-content: center;\n  overflow: hidden;\n}\n\n.display .last{\n  padding: 0px 16px 16px 16px;\n}\n\n\n.imgContainer img{\n  object-fit: scale-down;\n}\n"],sourceRoot:""}]);const c=i},645:n=>{n.exports=function(n){var e=[];return e.toString=function(){return this.map((function(e){var t="",r=void 0!==e[5];return e[4]&&(t+="@supports (".concat(e[4],") {")),e[2]&&(t+="@media ".concat(e[2]," {")),r&&(t+="@layer".concat(e[5].length>0?" ".concat(e[5]):""," {")),t+=n(e),r&&(t+="}"),e[2]&&(t+="}"),e[4]&&(t+="}"),t})).join("")},e.i=function(n,t,r,o,a){"string"==typeof n&&(n=[[null,n,void 0]]);var i={};if(r)for(var c=0;c<this.length;c++){var A=this[c][0];null!=A&&(i[A]=!0)}for(var d=0;d<n.length;d++){var s=[].concat(n[d]);r&&i[s[0]]||(void 0!==a&&(void 0===s[5]||(s[1]="@layer".concat(s[5].length>0?" ".concat(s[5]):""," {").concat(s[1],"}")),s[5]=a),t&&(s[2]?(s[1]="@media ".concat(s[2]," {").concat(s[1],"}"),s[2]=t):s[2]=t),o&&(s[4]?(s[1]="@supports (".concat(s[4],") {").concat(s[1],"}"),s[4]=o):s[4]="".concat(o)),e.push(s))}},e}},537:n=>{n.exports=function(n){var e=n[1],t=n[3];if(!t)return e;if("function"==typeof btoa){var r=btoa(unescape(encodeURIComponent(JSON.stringify(t)))),o="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(r),a="/*# ".concat(o," */"),i=t.sources.map((function(n){return"/*# sourceURL=".concat(t.sourceRoot||"").concat(n," */")}));return[e].concat(i).concat([a]).join("\n")}return[e].join("\n")}},379:n=>{var e=[];function t(n){for(var t=-1,r=0;r<e.length;r++)if(e[r].identifier===n){t=r;break}return t}function r(n,r){for(var a={},i=[],c=0;c<n.length;c++){var A=n[c],d=r.base?A[0]+r.base:A[0],s=a[d]||0,l="".concat(d," ").concat(s);a[d]=s+1;var p=t(l),m={css:A[1],media:A[2],sourceMap:A[3],supports:A[4],layer:A[5]};if(-1!==p)e[p].references++,e[p].updater(m);else{var u=o(m,r);r.byIndex=c,e.splice(c,0,{identifier:l,updater:u,references:1})}i.push(l)}return i}function o(n,e){var t=e.domAPI(e);return t.update(n),function(e){if(e){if(e.css===n.css&&e.media===n.media&&e.sourceMap===n.sourceMap&&e.supports===n.supports&&e.layer===n.layer)return;t.update(n=e)}else t.remove()}}n.exports=function(n,o){var a=r(n=n||[],o=o||{});return function(n){n=n||[];for(var i=0;i<a.length;i++){var c=t(a[i]);e[c].references--}for(var A=r(n,o),d=0;d<a.length;d++){var s=t(a[d]);0===e[s].references&&(e[s].updater(),e.splice(s,1))}a=A}}},569:n=>{var e={};n.exports=function(n,t){var r=function(n){if(void 0===e[n]){var t=document.querySelector(n);if(window.HTMLIFrameElement&&t instanceof window.HTMLIFrameElement)try{t=t.contentDocument.head}catch(n){t=null}e[n]=t}return e[n]}(n);if(!r)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");r.appendChild(t)}},216:n=>{n.exports=function(n){var e=document.createElement("style");return n.setAttributes(e,n.attributes),n.insert(e,n.options),e}},565:(n,e,t)=>{n.exports=function(n){var e=t.nc;e&&n.setAttribute("nonce",e)}},795:n=>{n.exports=function(n){var e=n.insertStyleElement(n);return{update:function(t){!function(n,e,t){var r="";t.supports&&(r+="@supports (".concat(t.supports,") {")),t.media&&(r+="@media ".concat(t.media," {"));var o=void 0!==t.layer;o&&(r+="@layer".concat(t.layer.length>0?" ".concat(t.layer):""," {")),r+=t.css,o&&(r+="}"),t.media&&(r+="}"),t.supports&&(r+="}");var a=t.sourceMap;a&&"undefined"!=typeof btoa&&(r+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(a))))," */")),e.styleTagTransform(r,n,e.options)}(e,n,t)},remove:function(){!function(n){if(null===n.parentNode)return!1;n.parentNode.removeChild(n)}(e)}}}},589:n=>{n.exports=function(n,e){if(e.styleSheet)e.styleSheet.cssText=n;else{for(;e.firstChild;)e.removeChild(e.firstChild);e.appendChild(document.createTextNode(n))}}}},e={};function t(r){var o=e[r];if(void 0!==o)return o.exports;var a=e[r]={id:r,exports:{}};return n[r](a,a.exports,t),a.exports}t.n=n=>{var e=n&&n.__esModule?()=>n.default:()=>n;return t.d(e,{a:e}),e},t.d=(n,e)=>{for(var r in e)t.o(e,r)&&!t.o(n,r)&&Object.defineProperty(n,r,{enumerable:!0,get:e[r]})},t.o=(n,e)=>Object.prototype.hasOwnProperty.call(n,e),t.nc=void 0,(()=>{var n=t(379),e=t.n(n),r=t(795),o=t.n(r),a=t(569),i=t.n(a),c=t(565),A=t.n(c),d=t(216),s=t.n(d),l=t(589),p=t.n(l),m=t(426),u={};let f;u.styleTagTransform=p(),u.setAttributes=A(),u.insert=i().bind(null,"head"),u.domAPI=o(),u.insertStyleElement=s(),e()(m.Z,u),m.Z&&m.Z.locals&&m.Z.locals,E("New York City").then((n=>{f=n,y()}));let C="F";const g=document.getElementById("inC");g.addEventListener("click",(()=>{C="C",g.classList.add("selected"),h.classList.remove("selected"),y()}));const h=document.getElementById("inF");async function E(n){const e=await async function(n){const e=await n;return console.log(e),{country:e.sys.country,name:e.name,coords:e.coord,feels_like:e.main.feels_like,humidity:e.main.humidity,temp:e.main.temp,temp_max:e.main.temp_max,temp_min:e.main.temp_min,main_desc:e.weather[0].main,sub_desc:e.weather[0].description}}(async function(n="New York City"){try{const e=await fetch("https://api.openweathermap.org/geo/1.0/direct?q="+n+"&limit=1&appid=910338b7304957522a845744793da366"),t=await e.json(),[r,o]=[t[0].lat,t[0].lon],a=await fetch("https://api.openweathermap.org/data/2.5/weather?lat="+r+"&lon="+o+"&appid=910338b7304957522a845744793da366");return await a.json()}catch(n){console.log(n)}}(n));return e}function x(n){return 1.8*(n-273.15)+32}function B(n){return n-273.15}function y(){let n,e;switch(C){case"F":n={country:(t=f).country,name:t.name,coords:t.coords,feels_like:Math.round(x(t.feels_like)),humidity:t.humidity,temp:Math.round(x(t.temp)),temp_max:Math.round(x(t.temp_max)),temp_min:Math.round(x(t.temp_min)),main_desc:t.main_desc,sub_desc:t.sub_desc},e="°F";break;case"C":n=function(n){return{country:n.country,name:n.name,coords:n.coords,feels_like:Math.round(B(n.feels_like)),humidity:n.humidity,temp:Math.round(B(n.temp)),temp_max:Math.round(B(n.temp_max)),temp_min:Math.round(B(n.temp_min)),main_desc:n.main_desc,sub_desc:n.sub_desc}}(f),e=" C"}var t;const r=b("title"),o=b("temp"),a=b("temphigh"),i=b("templow"),c=b("tempfeel");r.textContent=`${n.name}, ${n.country}: ${n.main_desc}`,o.textContent=n.temp+e,a.textContent=n.temp_max+e,i.textContent=n.temp_min+e,c.textContent=n.feels_like+e}function b(n){return document.querySelector("."+n)}h.addEventListener("click",(()=>{C="F",h.classList.add("selected"),g.classList.remove("selected"),y()})),document.getElementById("getcity").addEventListener("submit",(n=>{n.preventDefault(),E(document.getElementById("city").value).then((n=>{f=n,y(),async function(n){const e=await fetch("https://api.giphy.com/v1/gifs/translate?api_key=ml9QhXXS33SxzHC5tOezQ3ZirizRsQEX&s="+n,{mode:"cors"}).then((n=>n.json())).then((n=>n.data.images.original.url));document.getElementById("gif").src=await e}(f.main_desc)}))}))})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,